# -*- coding: utf-8 -*-
"""
PROJECT: Fighting malware using machine learning.

This file contains multiple functions used for training a machine learning
algorithm and obtaining the targets.
@author: Jacques-Antoine Portal
"""

import csv

FAMILY = ["Ramnit", "Lollipop", "Kelihos_ver3", "Vundo", "Simda", "Tracur", "Kelihos_ver1", "Obfuscator.ACY", "Gatak", "Scrambled", "clean"]


def getFileFamily(csvFile = "trainLabels.csv"):
    '''
    returns a Dictionary containing all the files as keys associated with their family.
    '''
    fileFamily = {}
    with open(csvFile) as trainLabel:
        file = csv.reader(trainLabel, delimiter = ' ', quotechar = '|')
        i = 0
        for row in file:
            if (i==0):
                i += 1
                continue
            else:
                for cell in row:
                    fileFamily[cell[1:21]] = int(cell[23:len(cell)])
    return fileFamily

#CONSTANT
FILEFAMILY = getFileFamily()



def getFileArray(csvFile = "trainLabels.csv"):
    '''
    returns an array of file names in the order that they are in the csvFile.
    this is needed because the order of the files cannot be guarentied with dictionaries.
    '''
    fileArray = []
    with open(csvFile) as trainLabel:
        file = csv.reader(trainLabel, delimiter = ' ', quotechar = '|')
        i = 0
        for row in file:
            if (i==0):
                i += 1
                continue
            else:
                for cell in row:
                    fileArray +=  [cell[1:21]]
    return fileArray


#CONSTANT
FILEARRAY = getFileArray()


def getFamily(index, fileArray = FILEARRAY, fileFamily = FILEFAMILY):
    '''
    returns the the file's family (file as a number / index)
    '''
    return fileFamily[fileArray[index]]



def getFamilyRepartition(familyDictionary = FILEFAMILY):
    '''
    returns the repartition of families in a dictionary of files.
    '''
    familyNumber = [0 for i in range(10)]
    for key in familyDictionary.keys():
        familyNumber[familyDictionary[key]-1] +=1
    return familyNumber


def getFileIndex(fileName, fileArray = FILEARRAY):
    '''
    This fucntion returns the index of a given filename in FILEARRAY
    '''
    for i in range(len(fileArray)):
        if fileArray[i] == fileName:
            return i


def getFilesIndex(fileNames, fileArray = FILEARRAY):
    '''
    This function returns a list of all the indexes (in FILEARRAY) from the files provided in a list of 
    file names.
    '''
    return [getFileIndex(f, fileArray) for f in fileNames]


def getFamilyRepartitionArray(FamilyArray, fileArray = FILEARRAY):
    '''
    returns the repartition of families in a list of files.
    '''
    famIndex, i, familyNumber = ([], 0, [0 for i in range(10)]) #initialisation of variables
    for f in FamilyArray:
        for i in range(len(fileArray)):
            if fileArray[i] == f:
                famIndex+=[i]
                break
    for i in famIndex:
        familyNumber[getFamily(i)-1] +=1
    return familyNumber

#CONSTANT
FAMILYREPARTITION = getFamilyRepartition()


